#!/usr/bin/env python

##### LOADING IN PACKAGES #--------------------------------------------------------------
import s3fs; import xarray as xr; import numpy as np
import pandas as pd; 
import dask.array as da
import ocetrac

import matplotlib.pyplot as plt; import cartopy.crs as ccrs

import warnings; import expectexception
warnings.filterwarnings('ignore')

import netCDF4 as nc; import datetime as dt
import scipy

import intake; import pprint
# Allow multiple lines per cell to be displayed without print (default is just last line)
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"
# Enable more explicit control of DataFrame display (e.g., to omit annoying line numbers)
from IPython.display import HTML

ds_blob = xr.open_dataset("blobs_sample.nc")
#label = ds_blob['labels'][:,:,:]
ds_detrendedSSTA = xr.open_dataset("detrended_sample.nc")
#ssta = ds_detrendedSSTA['__xarray_dataarray_variable__'][:]

combined = xr.combine_by_coords([ds_blob, ds_detrendedSSTA])
combined

%%time
event = combined.groupby(combined.labels) #Amazing! Only 20 seconds

def event_char(ent):
    time_begin = ent.time[0]
    time_end = ent.time[-1]
    duration = len(ent.groupby("time"))
    
    groupedby_by_time = ent.groupby(ent.time)
    for n, gro in groupedby_by_time:
        lat = gro.lat
        lon = gro.lon
        time = gro.time
        intensity_mean = gro['__xarray_dataarray_variable__'].mean() #check this
        intensity_max = gro['__xarray_dataarray_variable__'].max()
        intensity_min = gro['__xarray_dataarray_variable__'].min()
        intensity_cumulative = gro['__xarray_dataarray_variable__'].sum()
